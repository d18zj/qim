// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using Qim.EntitiFrameworkCore;
using System;

namespace Qim.EntitiFrameworkCore.Tests.Migrations
{
    [DbContext(typeof(EfCoreDbContext))]
    [Migration("20180529024009_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("Qim.EntitiFrameworkCore.Tests.Domain.Blog", b =>
                {
                    b.Property<string>("PId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreateOn");

                    b.Property<string>("DeleteBy")
                        .HasMaxLength(36);

                    b.Property<DateTime?>("DeleteOn");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifyBy")
                        .HasMaxLength(36);

                    b.Property<DateTime?>("LastModifyOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("TenantId");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("PId");

                    b.ToTable("Test_Blog");
                });

            modelBuilder.Entity("Qim.EntitiFrameworkCore.Tests.Domain.Post", b =>
                {
                    b.Property<Guid>("PId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlogId");

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreateOn");

                    b.Property<string>("LastModifyBy")
                        .HasMaxLength(36);

                    b.Property<DateTime?>("LastModifyOn");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("PId");

                    b.HasIndex("BlogId");

                    b.ToTable("Test_Post");
                });

            modelBuilder.Entity("Qim.EntitiFrameworkCore.Tests.Domain.SeqGuid", b =>
                {
                    b.Property<int>("PId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("ArrKey")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<Guid>("GuidKey");

                    b.Property<string>("StrKey")
                        .IsRequired()
                        .HasMaxLength(36);

                    b.HasKey("PId");

                    b.ToTable("Test_SeqGuid");
                });

            modelBuilder.Entity("Qim.EntitiFrameworkCore.Tests.Domain.Post", b =>
                {
                    b.HasOne("Qim.EntitiFrameworkCore.Tests.Domain.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId");
                });
#pragma warning restore 612, 618
        }
    }
}
